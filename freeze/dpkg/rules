#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
# export DH_VERBOSE=1

export LC_ALL=en_US.UTF-8

# This has to be exported to make some magic below work.
export DH_OPTIONS

# enable dpkg build flags
# disable full hardening for now
# export DEB_BUILD_MAINT_OPTIONS = hardening=+all
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk

DESTDIR=$(CURDIR)/debian/tmp
ifeq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
    OPTIMIZE=yes
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    MAKEFLAGS += -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
    PROCESSORS := $(shell cat /proc/cpuinfo | grep processor | wc -l)
    ifneq ($(PROCESSORS),0)
        MAKEFLAGS += -j$(PROCESSORS)
    endif
endif

DHARGS  = --parallel

MAKEOPTS = OPTIMIZE=$(OPTIMIZE) V=1 prefix=/usr DESTDIR=$(DESTDIR)

ifneq ($(filter notest nocheck,$(DEB_BUILD_OPTIONS)),)
BUILDTARGET = srcs
endif

%:
	dh $@ $(DHARGS)

override_dh_auto_build-arch:
	$(MAKE) $(MAKEOPTS) -C ice/cpp IceUtil Slice
	$(MAKE) $(MAKEOPTS) -C cpp ICE_BIN_DIST=all $(BUILDTARGET)

override_dh_auto_install-arch:
	$(MAKE) $(MAKEOPTS) -C cpp ICE_BIN_DIST=all install

override_dh_auto_clean-arch:
	$(MAKE) $(MAKEOPTS) -C ice/cpp distclean
	$(MAKE) $(MAKEOPTS) -C cpp distclean

override_dh_auto_test-arch:
ifeq ($(filter nocheck notest,$(DEB_BUILD_OPTIONS)),)
	-$(MAKE) $(MAKEOPTS) -C cpp ICE_BIN_DIST=all test
endif

override_dh_clean:
	find . -iname "*.pyc" -exec rm -rf {} \;
	dh_clean

override_dh_install:
	@echo VERSION $(VERSION)
	install -d -m 0755 $(DESTDIR)/usr/bin
	dh_install --list-missing -XICE_LICENSE -XLICENSE

override_dh_installdocs:
	dh_installdocs -A debian/README
